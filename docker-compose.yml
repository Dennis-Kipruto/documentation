services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: netra-doc-app
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:netra_secure_password@postgres:5432/netra_doc
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-super-secret-key-minimum-32-characters-long}
      - MEILISEARCH_HOST=http://meilisearch:7700
      - MEILISEARCH_API_KEY=netra-doc-secure-key-2025-change-in-production
      - EMAIL_SERVER_HOST=${EMAIL_SERVER_HOST:-smtp.example.com}
      - EMAIL_SERVER_PORT=${EMAIL_SERVER_PORT:-587}
      - EMAIL_SERVER_USER=${EMAIL_SERVER_USER:-your-email@example.com}
      - EMAIL_SERVER_PASSWORD=${EMAIL_SERVER_PASSWORD:-your-email-password}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@example.com}
    volumes:
      - ./docs:/app/docs
    depends_on:
      postgres:
        condition: service_healthy
      meilisearch:
        condition: service_started
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: netra-doc-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=netra_secure_password
      - POSTGRES_DB=netra_doc
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  meilisearch:
    image: getmeili/meilisearch:v1.10
    container_name: netra-doc-meilisearch
    ports:
      - "7700:7700"
    volumes:
      - meilisearch_data:/meili_data
    environment:
      - MEILI_MASTER_KEY=netra-doc-secure-key-2025-change-in-production
      - MEILI_ENV=development
    restart: unless-stopped

volumes:
  meilisearch_data:
  postgres_data:
